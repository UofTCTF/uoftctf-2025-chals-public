# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

# Required sections
name: "Racing 2"
author: "atom"
category: Misc
description: |
  I just watched Cars 2, and its a lot cooler. But hey, you thought you could get the flag by reading a file? Think again.

  `ssh user@34.19.76.234 -p 2222`. The password is `racing-chals`.

  Author: atom
value: 500
type: dynamic

# The extra field provides additional fields for data during the install/sync commands/
# Fields in extra can be used to supply additional information for other challenge types
# For example the follow extra field is for dynamic challenges. To use these following
# extra fields, set the type to "dynamic" and uncomment the "extra" section below
extra:
  initial: 500
  decay: 100
  minimum: 100

# Specify a protocol that should be used to connect to the running image
# For example if the image is a website you can specify http or https
# Otherwise you can specify tcp
protocol: tcp

# Specify a host to deploy the challenge onto.
# The currently supported URI schemes are ssh:// and registry://
# ssh is an ssh URI where the above image will be copied to and deployed (e.g. ssh://root@123.123.123.123)
# registry is a Docker registry tag (e.g registry://registry.example.com/test/image)
# host can also be specified during the deploy process: `ctf challenge deploy challenge --host=ssh://root@123.123.123.123`
host: null

# Optional settings

# # connection_info is used to provide a link, hostname, or instructions on how to connect to a challenge
# connection_info: nc hostname 12345

# # healthcheck is a tool/script used to check a challenge
# # If connection_info was provided to CTFd when the challenge was installed, it will be passed to the healthcheck script:
# # ./writeup/exploit.sh --connection-info "nc hostname 12345"
# healthcheck: writeup/exploit.sh

# # Can be removed if unused
# attempts: 5

# Flags specify answers that your challenge use. You should generally provide at least one.
# Can be removed if unused
# Accepts strings or dictionaries of CTFd API data
flags:
  - {
      type: "static",
      content: "uoftctf{f1nn_mcm155113_15_my_f4v0r173_ch4r4c73r}",
      data: "case_insensitive",
    }

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
  - race conditions
  - privilege escalation

# Provide paths to files from the same directory that this file is in
# Accepts strings
files:
  - src/chal.c

# Hints are used to give players a way to buy or have suggestions. They are not
# required but can be nice.
# Can be removed if unused
# Accepts dictionaries or strings
# hints:
#     - {
#         content: "This hint costs points",
#         cost: 10
#     }
#     - This hint is free


# The state of the challenge.
# If the field is omitted, the challenge is visible by default.
# If provided, the field can take one of two values: hidden, visible.
state: visible

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
